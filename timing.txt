preprocess.py for commit_comments without anything on fs.das3:

real    1:52.26
user    68.51
sys     1.53
mem     67264/4 kB

preprocess.py for commit_comments already downloaded on fs.das3:
real    1:10.07
user    67.52
sys     1.04
mem     67280/4 kB
(Note how there is almost no decrease in user+system time.)

preprocess.py for repos without anything on fs.das3:
real    20:58:15
user    29477.91
sys     884.04
mem     1458128/4 kB

preprocess.py for commit_comments and language group (after repos) without any downloaded files or parallelization on fs.das3:
real    1:09:50
user    910.36
sys     26.16
mem     765696/4 kB

analyze.py for plain commit_comments without anything and ignored output on fs.das3:
real    1:03.30
user    63.04
sys     0.25
mem     30592/4 kB

classify.py for plain commit_comments without anything and ignored output (id group) on fs.das3:
real    1:06.96
user    62.51
sys     0.93
mem     1155680/4 kB

classify.py for plain commit_comments (score group) through sort and reducer:
total real       1:02.43
classify.py user 61.24
classify.py sys  1.50
classify.pu mem  815136/4 kB
sort user        0.49
sort sys         0.49
sort mem         38320/4 kB
reducer.py user  0.18
reducer.py sys   0.01
reducer.py mem   16224/4 kB
We should probably just give the sum of this in order to compare with MapReduce.

TODO: Comparison with more recent hardware (laptop, huisuil?) and parallel MPI

preprocess.py for repos without anything on node02:
TODO

MapReduce classify.py for plain commit_comments (score group) and reducer.py:
TODO

classify.py for language commit_comments:
TODO

MPI preprocess repos with SSH:
TODO

MPI preprocess all commit_comments with language group with SSH:
TODO

MPI classify.py for all language commit_comments with SSH:
TODO
